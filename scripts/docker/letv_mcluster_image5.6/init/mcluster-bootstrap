#!/bin/bash
#
NAME=mcluster-mysqld

#. /opt/letv/mcluster/service-environment
#for sclname in $MCLUSTER_MYSQLD_SCLS_ENABLED ; do
#    . /opt/letv/mcluster/enable
#    export X_SCLS="$X_SCLS $sclname"
#done

# we want start daemon only inside "scl enable" invocation
#if ! scl_enabled mcluster ; then
#    echo "Collection mcluster has to be listed in /opt/letv/mcluster/service-environment"
#    exit 1
#fi

#export mysql bin env
export PATH=/opt/letv/mcluster/root/bin:${PATH}

#create random password
function rand_pass()
{
        head -c6 /dev/urandom | base64
}

#init user
function sst_user()
{
        local rootpwd="$1"
        local sstpwd="$2"

        if [ x"$sstpwd" == x ]; then
                echo "sst user password is empty"
                return 1
        fi

        echo The sstuser password is "$sstpwd"

#CREATE USER 'sstuser'@'localhost' IDENTIFIED BY 's3cret';
mysql -uroot -p"$rootpwd" <<EOF
GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY 'Mcluster' WITH GRANT OPTION;
GRANT RELOAD, LOCK TABLES, REPLICATION CLIENT, CREATE TABLESPACE, SUPER ON *.* TO 'backup'@'%' IDENTIFIED BY 'backup';
DROP DATABASE test;
CREATE DATABASE monitor;
CREATE USER 'sstuser'@'localhost' IDENTIFIED BY '$sstpwd';
CREATE USER 'monitor'@'%' IDENTIFIED BY '$sstpwd';
GRANT RELOAD, PROCESS, LOCK TABLES, REPLICATION CLIENT ON *.* TO 'sstuser'@'localhost';
GRANT ALL ON monitor.* to 'monitor'@'%' WITH MAX_QUERIES_PER_HOUR 36000 MAX_UPDATES_PER_HOUR 36000 MAX_CONNECTIONS_PER_HOUR 36000 MAX_USER_CONNECTIONS 36000;
delete from mysql.user where user='' or host not in ('%','127.0.0.1','localhost');
FLUSH PRIVILEGES;
EOF

}

SSTPASS="`rand_pass`"

#setup a new cluster
if ! service $NAME status >/dev/null; then
        echo 
        echo "Danger!! This will setup a new cluster."
        echo "Press Ctrl-C to cancel"

        echo

        echo -n "The process will start in 10 secs: "
        echo -e -n "----------\r"

        echo -n "The process will start in 10 secs: "
        for i in `seq 1 10`; do
                echo -n .
                sleep 1
        done

        echo " DONE"


        #mysql_install_db

        echo Setting up /opt/letv/mcluster/root/etc/my.cnf
        sed -i "s|^wsrep_sst_auth=.*$|wsrep_sst_auth='sstuser:$SSTPASS'|" /opt/letv/mcluster/root/etc/my.cnf
				
        echo "Starting new mysql cluster"

	#init db
	datadir='/srv/mcluster/mysql'
	if [ ! -d "$datadir/mysql" ] ; then
		# First, make sure $datadir is there with correct permissions
		if [ ! -e "$datadir" -a ! -h "$datadir" ]
		then
			mkdir -p "$datadir" || exit 1
		fi
		chown mysql:mysql "$datadir"
		chmod 0755 "$datadir"
		[ -x /sbin/restorecon ] && /sbin/restorecon "$datadir"
		# Now create the database
		cd /opt/letv/mcluster/root/
		/opt/letv/mcluster/root/scripts/mysql_install_db --datadir="$datadir" --user=mysql
		chown -R mysql:mysql "$datadir"
	fi
	chown mysql:mysql "$datadir"
	chmod 0755 "$datadir"       
 
	#init pxc
        if service $NAME bootstrap-pxc; then
                echo -n "Waiting the new mcluster to be ready.."
                while :; do
                        sleep 1
                        if service $NAME status >/dev/null 2>&1; then
                                mysqladmin -uroot password 'Mcluster' >/dev/null 2>&1 && break
                        fi
                        echo -n .
                done

                echo " DONE"

                sst_user Mcluster "$SSTPASS"

                echo "New mcluster started, you can copy the /opt/letv/mcluster/root/etc/my.cnf to other nodes"
        else
                echo "Error! $NAME daemon failed to start, please check manually"
        fi
else
        echo "This will setup a new cluster, if this is what want to do, please stop the mysql first then try this again."
fi
